@{
    ViewData["Title"] = "Shailendra's Projects";
}

<div class="card-columns">
    <div class="card" onclick="window.open('https://github.com/Shailosingh/Photokeep', '_blank');" style="cursor: pointer;">
        <img class="card-img" src="~/Images/Photokeep.png">
        <div class="card-body">
            <h4 class="card-title">Photokeep</h4>
            <p class="card-text">
                Photokeep is an image-hosting Discord bot that allows users to upload photos/files and organize them with folders. 
                This way, users can easily share photos with their friends and family, without clogging up space on their hard drive. 
                All they have to do is type a simple command to the bot, and Photokeep does the rest. Not only this but, there is also 
                a companion website that allows the user to view their photos and folders on the browser.
            </p>

            <p class="card-text">
                This bot was developed with C#, DSharpPlus for the Discord API, Azure Cosmos DB for the database and Azure App Services 
                for the hosting.
            </p>

            <p class="card-text">
                The website was programmed with ASP.NET (MVC) and the Discord Authentication API (OAuth2).
            </p>

            <p class="card-text">
                Photokeep taught me how to manage a large web project with a database that serves over 130 users with hundreds of 
                images, in an efficient manner.
            </p>

            <button type="button" class="btn btn-primary" onclick="window.open('https://photokeepwebsite.azurewebsites.net/', '_blank'); event.stopPropagation()">
                Visit Photokeep!
            </button>
        </div>
    </div>

    <div class="card" onclick="window.open('https://github.com/Shailosingh/Folderity', '_blank');" style="cursor: pointer;">
        <img class="card-img" src="~/Images/Folderity.png">
        <div class="card-body">
            <h4 class="card-title">Folderity</h4>
            <p class="card-text">
                Folderity is a fast and lightweight music player for Windows that allows users to create custom playlists in 
                folders on their computer that automatically update when a song is added or removed from the folder. This is 
                very convenient for anyone who has a large collection of music files (MP3's, WAV's, etc.), since it allows the
                user to automatically organize their music into playlists without having to manually add songs to the playlist
                one at a time.
            </p>

            <p class="card-text">
                This app was programmed with C++/WinRT and WinUI 3. The music player component was programmed using Microsoft Media
                Foundation (MMF). MMF is the modern Windows multimedia framework and using it required a deep understanding of COM 
                objects and the Windows Audio Stack. To simplify its use, I created a helper library called MMFSoundPlayer to make
                it easier for programmers to play audio files in their apps.
            </p>

            <p class="card-text">
                Folderity is currently in the late stages of development and will soon be available on the Microsoft Store.
            </p>
        </div>
    </div>
    
    <div class="card" onclick="window.open('https://github.com/Shailosingh/HuffmanCompressionSuite', '_blank');" style="cursor: pointer;">
        <img class="card-img" src="~/Images/HuffmanTree.png">
        <div class="card-body">
            <h4 class="card-title">Huffman Compression Suite</h4>
            <p class="card-text">
                Huffman Compression Suite is an app that allows users to losslessly compress and decompress their files using the 
                huffman coding algorithm
            </p>

            <p class="card-text">
                This app was programmed in C++/WinRT and WinUI 3. Making this app taught me how to use complex data structures and
                manage its memory correctly, in a real app outside of school.
            </p>
        </div>
    </div>

    <div class="card" onclick="window.open('https://github.com/Shailosingh/MinesweeperClassic', '_blank');" style="cursor: pointer;">
        <img class="card-img" src="~/Images/Minesweeper.png">
        <div class="card-body">
            <h4 class="card-title">MineMaster</h4>
            <p class="card-text">
                MineMaster is a remake of the classic Windows XP version of Minesweeper that we all know and love.
                It is available right now on the Microsoft Store and currently has over 5871 downloads.
            </p>

            <p class="card-text">
                This game was programmed with C# and WinUI 3. For programmers, the game's logic is available as a separate NuGet 
                package called Minesweeper Library that anyone can download, hook into a UI and instantly have their own port of 
                Minesweeper working on any platform that supports .NET, such as Windows, Mac, Linux, Android, etc.
            </p>

            <p class="card-text">
                MineMaster taught me how to write clean and modular code that separates all of the game's logic from its UI code. 
                This was mandatory since I created Minesweeper Library as a separate NuGet package for the logic of the game. This also 
                taught me how to write a library with interfaces that other programmers can easily understand and use in their own projects.
            </p>

            <button type="button" class="btn btn-primary" onclick="window.open('https://www.microsoft.com/store/productId/9NW74QKKG0DG', '_blank'); event.stopPropagation()">
                Download MineMaster!
            </button>

            <button type="button" class="btn btn-primary" onclick="window.open('https://www.nuget.org/packages/MinesweeperLibrary', '_blank'); event.stopPropagation()">
                Download Minesweeper Library!
            </button>
        </div>
    </div>
    
    <div class="card" onclick="window.open('https://github.com/Shailosingh/DiscordFileMasterV2', '_blank');" style="cursor: pointer;">
        <img class="card-img" src="~/Images/Discord FileMaster.png">
        <div class="card-body">
            <h4 class="card-title">Discord FileMaster</h4>
            <p class="card-text">
                Discord FileMaster is an app that allows the user to split large files into 8 MB chunks for upload 
                to Discord. It can also merge the 8 MB chunks back together. This is very useful for users who wish
                to upload large files to Discord, but are unable to do so because Discord has a 8 MB file size limit.
            </p>

            <p class="card-text">
                The file splitting and joining component of the app was developed as a seperate NuGet package called, 
                FileMaster Library. This library allows programmers to easily split files into any size chunks they want
                and join them back together. The library made the code behind the app very clean and modular.
            </p>

            <button type="button" class="btn btn-primary" onclick="window.open('https://www.nuget.org/packages/FileMasterLibrary', '_blank'); event.stopPropagation()">
                Download FileMaster Library!
            </button>
        </div>
    </div>
</div>